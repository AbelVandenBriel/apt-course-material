// ROOT
:tip-caption: 💡
:note-caption: ℹ️
:important-caption: ⚠️
:warning-caption: ⚠️
:task-caption: 👨‍🔧
:nofooter:
:toc: left
:toclevels: 3
:experimental:
:source-highlighter: pygments
:cakepoint: 🎂
:icons: font

= Design Patterns

According to https://en.wikipedia.org/wiki/Software_design_pattern[Wikipedia], a design pattern is a general, reusable solution to a commonly occuring problem.
There are plenty of examples of design patterns, such as

* https://en.wikipedia.org/wiki/Mutator_method[Getters and setters]
* https://en.wikipedia.org/wiki/Strategy_pattern[Strategy]
* https://en.wikipedia.org/wiki/Factory_method_pattern[Factory method]
* https://en.wikipedia.org/wiki/Iterator_pattern[Iterator]
* https://en.wikipedia.org/wiki/Object_pool_pattern[Object pool]
* https://en.wikipedia.org/wiki/Composite_pattern[Composite]
* https://en.wikipedia.org/wiki/Singleton_pattern[Singleton]

Let us have a closer look at some of these.

include::getters-setters.asciidoc[leveloffset=1]
include::strategy.asciidoc[leveloffset=1]
include::iterator.asciidoc[leveloffset=1]
